let nan = 0 / 0;

let main {
    >>> sqrt(69);
}

let sqrt(n) {
    n < 0? -> nan;
    -> sqrt_rec(n, 0, n);
}

let sqrt_rec(target, lo, hi) {
    let mid = lo + hi;
    mid <- mid / 2;

    let ans = mid * mid;
    close_enough(ans, target)? -> mid;
    ans < target? -> sqrt_rec(target, lo, mid);
    -> sqrt_rec(target, mid, hi);
}

let close_enough(a, b) {
    close(a, b, 0.0001);
}

let close(a, b, tolerance) {
    let diff = abs(a - b);
    -> diff <= tolerance;
}

let abs(n) {
    n < 0? -> -n;
    -> n;
}